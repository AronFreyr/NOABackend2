version: 2.1

orbs:
  codecov: codecov/codecov@3.2.3

jobs:
  lint:
    working_directory: ~/dj-boilerplate-backend
    docker:
      - image: cimg/python:3.13
    steps:
      - checkout
      - restore_cache:
          keys:
            - venv-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install \
              "flake8>=7.1.2,<7.1.99" \
              "black>=25.1.0,<25.1.99" \
              "isort>=6.0.1,<6.0.99"
      - run:
          name: Black
          command: |
            . venv/bin/activate
            python -m black boilerplate --check
      - run:
          name: Isort
          command: |
            . venv/bin/activate
            python -m isort boilerplate --check-only
      - run:
          name: Flake8 lint
          working_directory: boilerplate
          command: |
            . ../venv/bin/activate
            python -m flake8 .
      - save_cache:
          key: venv-{{ .Environment.CIRCLE_SHA1 }}-{{ epoch }}
          paths:
            - venv/

  unittest:
    working_directory: ~/dj-boilerplate-backend
    docker:
      - image: cimg/python:3.13
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build application Docker image
          command: |
            docker build \
              --build-arg SOURCE_COMMIT=${CIRCLE_SHA1} \
              .
      - run:
          name: Install dependencies
          command: |
            sudo apt-get install build-essential
      - run:
          name: Run tests
          command: |
            make ci-test src=.
      - persist_to_workspace:
          root: ~/dj-boilerplate-backend
          paths:
            - coverage.xml

  upload-to-codecov:
    working_directory: ~/dj-boilerplate-backend
    docker:
      - image: cimg/python:3.13
    steps:
      - checkout
      - restore_cache:
          keys:
            - venv-{{ .Environment.CIRCLE_SHA1 }}
      - attach_workspace:
          at: ~/dj-boilerplate-backend
      - codecov/upload:
          file: coverage.xml
          flags: unittests
      - store_artifacts:
          path: coverage.xml
          destination: coverage-reports

  publish_latest_image:
    working_directory: ~/dj-boilerplate-backend
    docker:
      - image: cimg/python:3.13
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build application Docker image
          command: |
            docker build \
              --build-arg SOURCE_COMMIT=${CIRCLE_SHA1} \
              -t django:latest \
              -t django:${CIRCLE_SHA1} \
              -t {{AWS_ACCOUNT_ID}}.dkr.ecr.eu-north-1.amazonaws.com/boilerplate:latest \
              -t {{AWS_ACCOUNT_ID}}.dkr.ecr.eu-north-1.amazonaws.com/boilerplate:${CIRCLE_SHA1} \
              -t circleci_django-boilerplate-ci \
              .
      - restore_cache:
          keys:
            - venv-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Publish images to registry
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install awscli
            aws ecr get-login-password --region eu-north-1 | docker login --password-stdin -u AWS {{AWS_ACCOUNT_ID}}.dkr.ecr.eu-north-1.amazonaws.com/boilerplate
            docker tag django {{AWS_ACCOUNT_ID}}.dkr.ecr.eu-north-1.amazonaws.com/boilerplate:latest
            docker push {{AWS_ACCOUNT_ID}}.dkr.ecr.eu-north-1.amazonaws.com/boilerplate:latest

  publish_release_image:
    working_directory: ~/dj-boilerplate-backend
    docker:
      - image: cimg/python:3.13
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build application Docker image
          command: |
            docker build \
              --build-arg SOURCE_COMMIT=${CIRCLE_SHA1} \
              -t django:latest \
              -t django:${CIRCLE_SHA1} \
              -t {{AWS_ACCOUNT_ID}}.dkr.ecr.eu-north-1.amazonaws.com/boilerplate:latest \
              -t {{AWS_ACCOUNT_ID}}.dkr.ecr.eu-north-1.amazonaws.com/boilerplate:${CIRCLE_SHA1} \
              -t circleci_django-boilerplate-ci \
              .
      - restore_cache:
          keys:
            - venv-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Publish images to registry
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install awscli
            aws ecr get-login-password --region eu-north-1 | docker login --password-stdin -u AWS {{AWS_ACCOUNT_ID}}.dkr.ecr.eu-north-1.amazonaws.com/boilerplate
            docker tag django {{AWS_ACCOUNT_ID}}.dkr.ecr.eu-north-1.amazonaws.com/boilerplate:${CIRCLE_TAG}
            docker push {{AWS_ACCOUNT_ID}}.dkr.ecr.eu-north-1.amazonaws.com/boilerplate:${CIRCLE_TAG}

workflows:
  version: 2
  backend:
    jobs:
      - lint:
          filters:
            tags:
              only: /release-.*/
      - unittest:
          requires:
            - lint
          filters:
            tags:
              only: /release-.*/
      - upload-to-codecov:
          requires:
            - unittest
      # - publish_latest_image:
      #     requires:
      #       - unittest
      #     filters:
      #       branches:
      #         only:
      #           - main
      - publish_release_image:
          requires:
            - unittest
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /release-[0-9]+-[0-9]+/
